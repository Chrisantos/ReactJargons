{"ast":null,"code":"var _jsxFileName = \"/home/chris/Documents/React/react-routing-demo-v4/src/products.js\";\nimport React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport Product from './product';\nvar productsData = [{\n  id: 1,\n  name: 'NIKE Liteforce Blue Sneakers',\n  description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie.',\n  status: 'Available'\n}, {\n  id: 2,\n  name: 'Stylised Flip Flops and Slippers',\n  description: 'Mauris finibus, massa eu tempor volutpat, magna dolor euismod dolor.',\n  status: 'Out of Stock'\n}, {\n  id: 3,\n  name: 'ADIDAS Adispree Running Shoes',\n  description: 'Maecenas condimentum porttitor auctor. Maecenas viverra fringilla felis, eu pretium.',\n  status: 'Available'\n}, {\n  id: 4,\n  name: 'ADIDAS Mid Sneakers',\n  description: 'Ut hendrerit venenatis lacus, vel lacinia ipsum fermentum vel. Cras.',\n  status: 'Out of Stock'\n}];\n\nvar Products = function Products(_ref) {\n  var match = _ref.match;\n  var linkList = productData.map(function (product) {\n    return React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"\".concat(match.url, \"/\").concat(product.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, product.name));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" Products\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" \", linkList, \" \"))), React.createElement(Route, {\n    path: \"\".concat(match.url, \"/:productId\"),\n    render: function render(props) {\n      return React.createElement(Product, Object.assign({\n        data: productsData\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: match.url,\n    render: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Please select a product.\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n};\n\nexport default Products; //You may have expected component = { Product } instead of the inline render function. \n//The problem is that we need to pass down productsData to the Product component along with all \n//the existing props. Although there are other ways you can do this, I find this method to be the easiest. \n//{...props} uses the ES6’s spread syntax to pass the whole props object to the component.","map":{"version":3,"sources":["/home/chris/Documents/React/react-routing-demo-v4/src/products.js"],"names":["React","Link","Route","Product","productsData","id","name","description","status","Products","match","linkList","productData","map","product","url","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAcC,KAAd,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,IAAMC,YAAY,GAAG,CACjB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,8BAFR;AAGEC,EAAAA,WAAW,EAAE,0EAHf;AAIEC,EAAAA,MAAM,EAAE;AAJV,CADiB,EAQjB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,kCAFR;AAGEC,EAAAA,WAAW,EAAE,sEAHf;AAIEC,EAAAA,MAAM,EAAE;AAJV,CARiB,EAejB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,+BAFR;AAGEC,EAAAA,WAAW,EAAE,sFAHf;AAIEC,EAAAA,MAAM,EAAE;AAJV,CAfiB,EAqBjB;AACEH,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE,qBAFR;AAGEC,EAAAA,WAAW,EAAE,sEAHf;AAIEC,EAAAA,MAAM,EAAE;AAJV,CArBiB,CAArB;;AA8BA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAY;AAAA,MAAVC,KAAU,QAAVA,KAAU;AACzB,MAAIC,QAAQ,GAAGC,WAAW,CAACC,GAAZ,CAAgB,UAACC,OAAD,EAAY;AACvC,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,YAAKJ,KAAK,CAACK,GAAX,cAAkBD,OAAO,CAACT,EAA1B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGS,OAAO,CAACR,IADX,CADF,CADJ;AAOH,GARc,CAAf;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMK,QAAN,MAFF,CADD,CADJ,EAQI,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKD,KAAK,CAACK,GAAX,gBAAX;AACI,IAAA,MAAM,EAAG,gBAACC,KAAD;AAAA,aAAW,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAGZ;AAAhB,SAAkCY,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAX;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAUI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAEN,KAAK,CAACK,GAAzB;AACI,IAAA,MAAM,EAAE;AAAA,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAP;AAAA,KADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ;AAeH,CA1BD;;AA4BA,eAAeN,QAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport Product from './product';\n\nconst productsData = [\n    {\n      id: 1,\n      name: 'NIKE Liteforce Blue Sneakers',\n      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin molestie.',\n      status: 'Available'\n    \n    },\n    {\n      id: 2,\n      name: 'Stylised Flip Flops and Slippers',\n      description: 'Mauris finibus, massa eu tempor volutpat, magna dolor euismod dolor.',\n      status: 'Out of Stock'\n    \n    },\n    {\n      id: 3,\n      name: 'ADIDAS Adispree Running Shoes',\n      description: 'Maecenas condimentum porttitor auctor. Maecenas viverra fringilla felis, eu pretium.',\n      status: 'Available'\n    },\n    {\n      id: 4,\n      name: 'ADIDAS Mid Sneakers',\n      description: 'Ut hendrerit venenatis lacus, vel lacinia ipsum fermentum vel. Cras.',\n      status: 'Out of Stock'\n    },\n    \n];\n\nconst Products = ({match}) =>{\n    let linkList = productData.map((product) =>{\n        return(\n            <li>\n              <Link to={`${match.url}/${product.id}`}>\n                {product.name}\n              </Link>\n            </li>\n        );\n    })\n\n    return(\n        <div>\n            <div>\n             <div>\n               <h3> Products</h3>\n               <ul> {linkList} </ul>\n             </div>\n            </div>\n    \n            <Route path={`${match.url}/:productId`}\n                render={ (props) => <Product data= {productsData} {...props} />}/>\n            <Route exact path={match.url}\n                render={() => (<div>Please select a product.</div>)}/>\n        </div>\n    )\n}\n\nexport default Products;\n\n//You may have expected component = { Product } instead of the inline render function. \n//The problem is that we need to pass down productsData to the Product component along with all \n//the existing props. Although there are other ways you can do this, I find this method to be the easiest. \n//{...props} uses the ES6’s spread syntax to pass the whole props object to the component. "]},"metadata":{},"sourceType":"module"}