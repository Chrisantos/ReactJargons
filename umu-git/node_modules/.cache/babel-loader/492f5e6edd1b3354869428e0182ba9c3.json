{"ast":null,"code":"import _regeneratorRuntime from \"/home/chris/Documents/React/umu-git/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/home/chris/Documents/React/umu-git/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/chris/Documents/React/umu-git/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/chris/Documents/React/umu-git/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/chris/Documents/React/umu-git/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/chris/Documents/React/umu-git/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _asyncToGenerator from \"/home/chris/Documents/React/umu-git/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/chris/Documents/React/umu-git/src/views/searchBox.js\";\nimport React, { Component } from 'react';\nvar style = {\n  width: \"60%\",\n  marginLeft: 50,\n  marginRight: 50,\n  textAlign: \"center\"\n};\nvar results = [];\n\nfunction fetchResults(_x) {\n  return _fetchResults.apply(this, arguments);\n}\n\nfunction _fetchResults() {\n  _fetchResults = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url) {\n    var resp, data, authors, allResults;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            resp = fetch(url);\n            _context.next = 3;\n            return resp.json();\n\n          case 3:\n            data = _context.sent;\n            authors = data.results; // Get the results\n\n            allResults = authors.map(function (author, index) {\n              // Map through the results and for each run the code below\n              // <div>\n              //     <h2>{author.name.first} {author.name.last}</h2>\n              //     <img src= {author.picture.medium} />\n              // </div>\n              console.log(author.name.first);\n              results[index] = author.name.first;\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _fetchResults.apply(this, arguments);\n}\n\nvar SearchBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBox, _Component);\n\n  function SearchBox(props) {\n    _classCallCheck(this, SearchBox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SearchBox).call(this, props));\n  }\n\n  _createClass(SearchBox, [{\n    key: \"processChange\",\n    value: function processChange(e) {\n      var username = e.target.value;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var result = [];\n      var url = \"https://randomuser.me/api/?results=5\"; // fetch(url)\n      // .then((resp) => resp.json()) // Transform the data into json\n      // .then(function(data) {\n      //     let authors = data.results; // Get the results\n      //     let results = authors.map(function(author, index) { // Map through the results and for each run the code below\n      //         // <div>\n      //         //     <h2>{author.name.first} {author.name.last}</h2>\n      //         //     <img src= {author.picture.medium} />\n      //         // </div>\n      //         console.log(author.name.first);\n      //         result[index] = author.name.first;\n      //       })\n      //  })\n\n      fetchResults(url);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"search\",\n        style: style,\n        onChange: this.processChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, result));\n    }\n  }]);\n\n  return SearchBox;\n}(Component);\n\nexport default SearchBox;","map":{"version":3,"sources":["/home/chris/Documents/React/umu-git/src/views/searchBox.js"],"names":["React","Component","style","width","marginLeft","marginRight","textAlign","results","fetchResults","url","resp","fetch","json","data","authors","allResults","map","author","index","console","log","name","first","SearchBox","props","e","username","target","value","result","processChange"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE,KADG;AAEVC,EAAAA,UAAU,EAAE,EAFF;AAGVC,EAAAA,WAAW,EAAE,EAHH;AAIVC,EAAAA,SAAS,EAAE;AAJD,CAAd;AAOA,IAAIC,OAAO,GAAG,EAAd;;SACeC,Y;;;;;;;2BAAf,iBAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACUC,YAAAA,IADV,GACiBC,KAAK,CAACF,GAAD,CADtB;AAAA;AAAA,mBAEuBC,IAAI,CAACE,IAAL,EAFvB;;AAAA;AAEUC,YAAAA,IAFV;AAGQC,YAAAA,OAHR,GAGkBD,IAAI,CAACN,OAHvB,EAGgC;;AACxBQ,YAAAA,UAJR,GAIqBD,OAAO,CAACE,GAAR,CAAY,UAASC,MAAT,EAAiBC,KAAjB,EAAwB;AAAE;AAC3C;AACA;AACA;AACA;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAP,CAAYC,KAAxB;AACAf,cAAAA,OAAO,CAACW,KAAD,CAAP,GAAiBD,MAAM,CAACI,IAAP,CAAYC,KAA7B;AAEX,aARgB,CAJrB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;IAeMC,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kFACTA,KADS;AAGlB;;;;kCAEaC,C,EAAG;AACb,UAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA1B;AAEH;;;6BAEQ;AAEL,UAAIC,MAAM,GAAG,EAAb;AAEA,UAAMpB,GAAG,GAAG,sCAAZ,CAJK,CAML;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEAD,MAAAA,YAAY,CAACC,GAAD,CAAZ;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAE,QAAb;AAAsB,QAAA,KAAK,EAAGP,KAA9B;AAAqC,QAAA,QAAQ,EAAG,KAAK4B,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMD,MAAN,CAFJ,CADJ;AAMH;;;;EAxCmB5B,S;;AA2CxB,eAAesB,SAAf","sourcesContent":["import React, {Component} from 'react';\n\nconst style = {\n    width: \"60%\",\n    marginLeft: 50,\n    marginRight: 50,\n    textAlign: \"center\"\n}\n\nlet results = [];\nasync function fetchResults(url) {\n    const resp = fetch(url);\n    const data = await resp.json();\n    let authors = data.results; // Get the results\n    let allResults = authors.map(function(author, index) { // Map through the results and for each run the code below\n                // <div>\n                //     <h2>{author.name.first} {author.name.last}</h2>\n                //     <img src= {author.picture.medium} />\n                // </div>\n                console.log(author.name.first);\n                results[index] = author.name.first;\n                \n    });\n}\n\nclass SearchBox extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    processChange(e) {\n        const username = e.target.value;\n        \n    }\n\n    render() {\n\n        let result = [];\n\n        const url = \"https://randomuser.me/api/?results=5\";\n\n        // fetch(url)\n        // .then((resp) => resp.json()) // Transform the data into json\n        // .then(function(data) {\n        //     let authors = data.results; // Get the results\n        //     let results = authors.map(function(author, index) { // Map through the results and for each run the code below\n        //         // <div>\n        //         //     <h2>{author.name.first} {author.name.last}</h2>\n        //         //     <img src= {author.picture.medium} />\n        //         // </div>\n        //         console.log(author.name.first);\n        //         result[index] = author.name.first;\n                \n        //       })\n        //  })\n\n        fetchResults(url);\n\n        return(\n            <div>\n                <input type= \"search\" style= {style} onChange= {this.processChange}/>\n                <div>{result}</div>\n            </div>\n        );\n    }\n}\n\nexport default SearchBox;"]},"metadata":{},"sourceType":"module"}